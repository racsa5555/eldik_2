from datetime import datetime, timezone, timedelta
import gspread
import pandas as pd
import asyncio
from google.oauth2.service_account import Credentials
from gspread_formatting import Color, CellFormat,format_cell_range

scopes = [
    'https://www.googleapis.com/auth/spreadsheets',
    'https://www.googleapis.com/auth/drive'
]
credentials = Credentials.from_service_account_file('./credentials.json', scopes=scopes)
client = gspread.authorize(credentials)

def append_products(df):
    tz = timezone(timedelta(hours=6))
    date = datetime.now(tz)
    current_date = date.strftime("%m-%d")
    sheet = client.open(title = 'Eldik_Express_Products').sheet1
    values = df.values.tolist()
    data = []
    for index, row in df.iterrows():
        track_code = row.iloc[1]
        status = '–í –ü—É—Ç–∏'
        date = row.iloc[2]
        data.append([track_code, '', status, date])
    sheet.append_rows(data)
    return True

import time
def sort_status(data):
    tz = timezone(timedelta(hours=6))
    date = datetime.now(tz)
    current_date = date.strftime("%m-%d")

    sheet = client.open(title='Eldik_Express_Products').sheet1
    sheet_data = sheet.get_all_records()

    count = 0  # –°—á—ë—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
    for index, row in data.iterrows():
        for i, row2 in enumerate(sheet_data, start=2):
            if str(row.iloc[1]) == str(row2['–¢—Ä–µ–∫ –ö–æ–¥']) and row2['–°—Ç–∞—Ç—É—Å'] != '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞':
                while True:  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª, –ø–æ–∫–∞ –Ω–µ —É–¥–∞—Å—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å
                    try:
                        sheet.update(f'C{i}:D{i}', [['–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞', current_date]])
                        break  # –ï—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ ‚Äî –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
                    except:
                        time.sleep(2)
                count += 1
                if count % 100 == 0:  # –ü–∞—É–∑–∞ –ø–æ—Å–ª–µ 100 –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
                    time.sleep(1)



async def update_google_sheet(data, new_status, bot):
    sheet = client.open(title='Eldik_Express_Products').sheet1
    sheet_data = sheet.get_all_records()
    
    tz = timezone(timedelta(hours=6))
    current_date = datetime.now(tz).strftime("%m-%d")

    spreadsheet2 = client.open('Eldik_Express_Clients')
    sheets2 =  spreadsheet2.worksheets()
    clients = sheets2[0]
    data2 = clients.get_all_records()

    updates = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è

    for index, row in data.iterrows():
        track_code = row['–¢—Ä–µ–∫ –∫–æ–¥']
        client_code = row['–ö–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞'] if not pd.isna(row['–ö–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞']) else ''
        price = row['–û–±—â.—Å—É–º–º–∞'] if not pd.isna(row['–û–±—â.—Å—É–º–º–∞']) else ''

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
        for i, row in enumerate(data2, start=2):
            if str(row['id']) == str(client_code) and row['tg_id']:
                try:
                    await bot.send_message(text=f'–í–∞—à–∞ –ø–æ—Å—ã–ª–∫–∞ —Å —Ç—Ä–µ–∫ –∫–æ–¥–æ–º {track_code} –ø—Ä–∏–±—ã–ª–∞ –Ω–∞ —Å–∫–ª–∞–¥', chat_id=int(row['tg_id']))
                except:
                    continue

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        for i, row in enumerate(sheet_data, start=2):
            if row['–¢—Ä–µ–∫ –ö–æ–¥'] == track_code:
                updates.append({
                    'range': f'A{i}:E{i}',
                    'values': [[track_code, client_code, new_status, current_date, price if price not in ['0', 0] else '']]
                })

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—É–∑—ã, –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –¥–∞–Ω–Ω—ã—Ö
        if len(updates) >= 1000:  
            sheet.batch_update(updates)
            updates.clear()
            await asyncio.sleep(2)  

    # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–∞–Ω–Ω—ã–µ
    if updates:
        sheet.batch_update(updates)




def find_order_by_id(item_id,lang):
    spreadsheet = client.open(title='Eldik_Express_Products')
    sheets = spreadsheet.worksheets()
    sheet = sheets[0]
    data = sheet.get_all_values()
    df = pd.DataFrame(data[1:], columns=data[0])
    items = df[df['–ö–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞'] == item_id]
    orders_info = ""
    k = 0
    extra = ''
    extra_date = ''
    summ = 0
    for index, row in items.iterrows():
        extra = ''
        extra_date = ''
        if row['–î–∞—Ç–∞']:
            extra_date = f"–î–∞—Ç–∞: {row['–î–∞—Ç–∞']}"
        if row['–°—Ç–∞—Ç—É—Å'] == '–í –ü—É—Ç–∏':
            status = 'üöõ –í –ü—É—Ç–∏'
        if row['–°—Ç–∞—Ç—É—Å'] == '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞':
            status = ' üá∞üá¨–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞'
        if row['–°—Ç–∞—Ç—É—Å'] == '–ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ':
            status = '–ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ'
        if row['–°—Ç–∞—Ç—É—Å'] == '–í—ã–¥–∞–Ω':
            status = '–í—ã–¥–∞–Ω'
        orders_info += f"–ö–æ–¥: {row['–¢—Ä–µ–∫ –ö–æ–¥']}, {status}{extra}\n{extra_date},\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-\n"
        if summ == 0:
            summ = row['–°—É–º–º–∞']
    if orders_info and summ:
        orders_info += f"–û–±—â–∞—è —Å—É–º–º–∞: {summ}"
        return orders_info
    if orders_info:
        return orders_info
    if lang == 'RU':
        return f"–£ –≤–∞—Å –ø–æ–∫–∞-—á—Ç–æ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤"
    else:
        return f"–°–∏–∑–¥–µ —Ç–æ–≤–∞—Ä –∂–æ–∫"

def register_client(data):
    spreadsheet = client.open(title='Eldik_Express_Clients')
    sheets = spreadsheet.worksheets()
    sheet = sheets[0]
    sheet.append_row([data['city'],data['full_name'] + ' ' + data['name'],data['phone_number'],str(data['id']), data['tg_id']])
    return True

def update_client_by_id(client_id, new_data,ref):
    spreadsheet = client.open('Eldik_Express_Clients')
    sheets = spreadsheet.worksheets()
    sheet = sheets[0]
    data = sheet.get_all_records()
    for i, row in enumerate(data, start=2):
        if row['id'] == client_id:
            for key, value in new_data.items():
                sheet.update_cell(i, sheet.find(key).col, value)
            return True
    return False

def find_user_by_data(phone_number,client_id,lang):
    spreadsheet = client.open('Eldik_Express_Clients')
    sheets = spreadsheet.worksheets()
    sheet = sheets[0]
    data = sheet.get_all_records()
    for i, row in enumerate(data, start=2):
        if row['id'] == client_id and row['–ù–æ–º–µ—Ä'] == int(phone_number):
            data = {'id':client_id,
                    'name':row['–§–ò–û'].split()[0],
                    'full_name':row['–§–ò–û'].split()[1],
                    'phone_number':row['–ù–æ–º–µ—Ä'],
                    'city':row['–ì–æ—Ä–æ–¥'],
                    'language':lang
                    }
            return data
    if lang == 'RU':
        return '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∏–ª–∏ –∫–æ–¥'
    else:
        return '–ö–µ—á–∏—Ä–µ—Å–∏–∑, –Ω–æ–º–µ—Ä –∂–µ –∂–µ–∫–µ –∫–æ–¥ —Ç—É—É—Ä–∞ —ç–º–µ—Å'


def set_client_id_to_product(track_code, client_id):
    spreadsheet = client.open('Eldik_Express_Products')
    sheets = spreadsheet.worksheets()
    sheet = sheets[0]
    data = sheet.get_all_records()
    for i, row in enumerate(data, start=2):  # start=2, —Ç.–∫. –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî –∑–∞–≥–æ–ª–æ–≤–æ–∫
        if str(row['–¢—Ä–µ–∫ –ö–æ–¥']) == str(track_code):
            # –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å—Ç–æ–ª–±—Ü–µ "–°—Ç–∞—Ç—É—Å" –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            status_col_index = list(row.keys()).index('–ö–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞') + 1
            sheet.update_cell(i, status_col_index, client_id)
            return True
    return False

async def send_notification(track_code, bot):
    spreadsheet = client.open('Eldik_Express_Products')
    sheets = spreadsheet.worksheets()
    products = sheets[0]
    data = products.get_all_records()
    for i, row in enumerate(data, start=2):
        if str(row['–¢—Ä–µ–∫ –ö–æ–¥']) == str(track_code):
            if str(row['–°—Ç–∞—Ç—É—Å']) == '–í—ã–¥–∞–Ω':
                return f'{track_code} —É–∂–µ –±—ã–ª –≤—ã–¥–∞–Ω'
            client_id = str(row['–ö–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞'])
            i_product = i
            status_col_index = list(row.keys()).index('–°—Ç–∞—Ç—É—Å') + 1
            break
    if not client_id:
        return f'–ù–µ –Ω–∞–π–¥–µ–Ω –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ç—Ä–µ–∫ –∫–æ–¥–∞ {track_code}'
    spreadsheet2 = client.open('Eldik_Express_Clients')
    sheets2 = spreadsheet2.worksheets()
    clients = sheets2[0]
    data2 = clients.get_all_records()
    for i, row in enumerate(data2, start=2):
        if str(row['id']) == str(client_id):
            tg_id = row['tg_id']
            break
    if not tg_id:
        return f'–£ –∫–ª–∏–µ–Ω—Ç–∞ —Å id {client_id} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω tg_id'
    text = f'–ü–æ—Å—ã–ª–∫–∞ —Å —Ç—Ä–µ–∫ –∫–æ–¥–æ–º {track_code} —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞'
    await bot.send_message(chat_id=int(tg_id), text = text)
    products.update_cell(i_product, status_col_index, '–í—ã–¥–∞–Ω')
    return f'{track_code} ‚úÖ'
